Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: "prod"

Globals:
  Function:
    Runtime: python3.6
    Timeout: 10
  Api:
    EndpointConfiguration: REGIONAL
    MethodSettings: [{
      "ThrottlingBurstLimit": 10,
      "ThrottlingRateLimit": 5,
      "ResourcePath": "/*",
      "HttpMethod": "*",
    }]

Resources:
  ShowSequence:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.showsequence
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        ShowSequenceGetEvent:
          Type: Api
          Properties:
            Path: "/showsequence/{sequence}"
            Method: get
  Off:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.off
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        OffGetEvent:
          Type: Api
          Properties:
            Path: "/off"
            Method: get
  State:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.state
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        StateGetEvent:
          Type: Api
          Properties:
            Path: "/state"
            Method: get

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${AWS::StackName}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        -  arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        -
          PolicyName: "iotshadowoperations"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                - "iot:GetThingShadow"
                - "iot:UpdateThingShadow"
                Resource: "arn:aws:iot:*:*:thing/*"
